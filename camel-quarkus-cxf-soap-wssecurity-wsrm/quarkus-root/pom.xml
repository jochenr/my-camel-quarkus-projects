<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>de.jochenr.quarkus.integration</groupId>
		<artifactId>camel-quarkus-cxf-wssecurity-wsrm-project</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<artifactId>camel-quarkus-cxf-soap-wssecurity-wsrm</artifactId>

	<properties>
		<maven.compiler.release>17</maven.compiler.release>
		<java.version>17</java.version>
		<maven.compiler.source>17</maven.compiler.source>
		<maven.compiler.target>17</maven.compiler.target>
	</properties>


	<dependencies>

		<dependency>
			<groupId>org.apache.camel.quarkus</groupId>
			<artifactId>camel-quarkus-openapi-java</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel.quarkus</groupId>
			<artifactId>camel-quarkus-rest-openapi</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel.quarkus</groupId>
			<artifactId>camel-quarkus-log</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel.quarkus</groupId>
			<artifactId>camel-quarkus-json-validator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel.quarkus</groupId>
			<artifactId>camel-quarkus-rest</artifactId>
		  </dependency>
		  <dependency>
			<groupId>org.apache.camel.quarkus</groupId>
			<artifactId>camel-quarkus-jackson</artifactId>
		  </dependency>
		<dependency>
			<groupId>org.apache.camel.quarkus</groupId>
			<artifactId>camel-quarkus-bean</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel.quarkus</groupId>
			<artifactId>camel-quarkus-mock</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel.quarkus</groupId>
			<artifactId>camel-quarkus-direct</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel.quarkus</groupId>
			<artifactId>camel-quarkus-attachments</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel.quarkus</groupId>
			<artifactId>camel-quarkus-jaxb</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel.quarkus</groupId>
			<artifactId>camel-quarkus-xpath</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-arc</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.camel.quarkus</groupId>
			<artifactId>camel-quarkus-http</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel.quarkus</groupId>
			<artifactId>camel-quarkus-cxf-soap</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkiverse.cxf</groupId>
			<artifactId>quarkus-cxf-rt-ws-security</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkiverse.cxf</groupId>
			<artifactId>quarkus-cxf-rt-ws-rm</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf.xjc-utils</groupId>
			<artifactId>cxf-xjc-runtime</artifactId>
		</dependency>




		<!-- https://quarkus.io/guides/security-customization#disabling-authorization -->
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-security</artifactId>
		</dependency>
		<!--
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-oidc</artifactId>
		</dependency>
		-->
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-elytron-security</artifactId>
		</dependency>
		<!-- 
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-elytron-security-ldap</artifactId>
		</dependency>
		-->
		<dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-elytron-security-properties-file</artifactId>
        </dependency>


		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-junit5</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.camel.quarkus</groupId>
			<artifactId>camel-quarkus-junit5</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.quarkiverse.artemis</groupId>
			<artifactId>quarkus-test-artemis</artifactId>
			<scope>test</scope>
		</dependency>
		<!--
		<dependency>
			<groupId>io.quarkiverse.cxf</groupId>
			<artifactId>quarkus-cxf-test-util</artifactId>
			<scope>test</scope>
		</dependency>
		-->
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>${assertj.version}</version>
			<scope>test</scope>
		</dependency>


		<!-- START: fehlt bei Quarkus? -->


		<!-- ENDE: fehlt bei Quarkus? -->


	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>${quarkus.platform.group-id}</groupId>
				<artifactId>quarkus-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${compiler-plugin.version}</version>
				<configuration>
					<compilerArgs>
						<arg>-parameters</arg>
					</compilerArgs>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${surefire-plugin.version}</version>
				<goals>
					<goal>test</goal>
				</goals>
				<configuration>
					<skipTests>${skip.surefire.tests}</skipTests>
					<systemPropertyVariables>
						<java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
					</systemPropertyVariables>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${surefire-plugin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<systemPropertyVariables>
								<native.image.path>
									${project.build.directory}/${project.build.finalName}-runner</native.image.path>
								<java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
								<maven.home>${maven.home}</maven.home>
							</systemPropertyVariables>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>keytool-maven-plugin</artifactId>
				<version>1.7</version>
				<configuration>
					<keypass>password</keypass>
					<validity>365</validity>
					<keyalg>RSA</keyalg>
					<storepass>password</storepass>
				</configuration>
				<executions>
					<execution>
						<id>generate-cxfca-keypair</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>clean</goal>
							<goal>generateKeyPair</goal>
						</goals>
						<configuration>
							<alias>cxfca</alias>
							<dname>CN=cxfca, OU=eng, O=apache.org</dname>
							<exts>
								<ext>bc:c=ca:true,pathlen:2147483647</ext>
								<ext>IssuerAlternativeName=DNS:NOT-FOR-PRODUCTION-USE</ext>
							</exts>
							<keystore>${project.build.outputDirectory}/cxfca.jks</keystore>
						</configuration>
					</execution>
					<execution>
						<id>export-cxfca-certificate</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>exportCertificate</goal>
						</goals>
						<configuration>
							<alias>cxfca</alias>
							<keystore>${project.build.outputDirectory}/cxfca.jks</keystore>
							<rfc>true</rfc>
							<file>${project.build.outputDirectory}/cxfca.pem</file>
						</configuration>
					</execution>
					<execution>
						<id>generate-server-keypair</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>clean</goal>
							<goal>generateKeyPair</goal>
						</goals>
						<configuration>
							<alias>localhost</alias>
							<dname>CN=localhost, OU=eng, O=apache.org</dname>
							<exts>
								<ext>bc:c=ca:true,pathlen:2147483647</ext>
								<ext>IssuerAlternativeName=DNS:NOT-FOR-PRODUCTION-USE</ext>
							</exts>
							<keystore>${project.build.outputDirectory}/truststore-server.jks</keystore>
						</configuration>
					</execution>
					<execution>
						<id>generate-alice-keypair</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>clean</goal>
							<goal>generateKeyPair</goal>
						</goals>
						<configuration>
							<alias>alice</alias>
							<dname>CN=alice, OU=eng, O=apache.org</dname>
							<exts>
								<ext>IssuerAlternativeName=DNS:NOT-FOR-PRODUCTION-USE</ext>
								<ext>SubjectAlternativeName=DNS:localhost,IP:127.0.0.1</ext>
							</exts>
							<keystore>${project.build.outputDirectory}/alice.jks</keystore>
						</configuration>
					</execution>
					<execution>
						<id>generate-bob-keypair</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>clean</goal>
							<goal>generateKeyPair</goal>
						</goals>
						<configuration>
							<alias>bob</alias>
							<dname>CN=bob, OU=eng, O=apache.org</dname>
							<exts>
								<ext>IssuerAlternativeName=DNS:NOT-FOR-PRODUCTION-USE</ext>
								<ext>SubjectAlternativeName=DNS:localhost,IP:127.0.0.1</ext>
							</exts>
							<keystore>${project.build.outputDirectory}/bob.jks</keystore>
						</configuration>
					</execution>
					<execution>
						<id>generate-server-certificate-request</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generateCertificateRequest</goal>
						</goals>
						<configuration>
							<alias>localhost</alias>
							<keystore>${project.build.outputDirectory}/truststore-server.jks</keystore>
							<file>${project.build.outputDirectory}/server.csr</file>
						</configuration>
					</execution>
					<execution>
						<id>generate-server-certificate</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generateCertificate</goal>
						</goals>
						<configuration>
							<alias>cxfca</alias>
							<keystore>${project.build.outputDirectory}/cxfca.jks</keystore>
							<rfc>true</rfc>
							<infile>${project.build.outputDirectory}/server.csr</infile>
							<outfile>${project.build.outputDirectory}/server.pem</outfile>
						</configuration>
					</execution>
					<execution>
						<id>generate-alice-certificate-request</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generateCertificateRequest</goal>
						</goals>
						<configuration>
							<alias>alice</alias>
							<keystore>${project.build.outputDirectory}/alice.jks</keystore>
							<file>${project.build.outputDirectory}/alice.csr</file>
						</configuration>
					</execution>					
					<execution>
						<id>generate-alice-certificate</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generateCertificate</goal>
						</goals>
						<configuration>
							<alias>cxfca</alias>
							<keystore>${project.build.outputDirectory}/cxfca.jks</keystore>
							<rfc>true</rfc>
							<infile>${project.build.outputDirectory}/alice.csr</infile>
							<outfile>${project.build.outputDirectory}/alice.pem</outfile>
						</configuration>
					</execution>
					<execution>
						<id>generate-bob-certificate-request</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generateCertificateRequest</goal>
						</goals>
						<configuration>
							<alias>bob</alias>
							<keystore>${project.build.outputDirectory}/bob.jks</keystore>
							<file>${project.build.outputDirectory}/bob.csr</file>
						</configuration>
					</execution>
					<execution>
						<id>generate-bob-certificate</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generateCertificate</goal>
						</goals>
						<configuration>
							<alias>cxfca</alias>
							<keystore>${project.build.outputDirectory}/cxfca.jks</keystore>
							<rfc>true</rfc>
							<infile>${project.build.outputDirectory}/bob.csr</infile>
							<outfile>${project.build.outputDirectory}/bob.pem</outfile>
						</configuration>
					</execution>
					<execution>
						<id>import-cxfca-certificate-to-server</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>importCertificate</goal>
						</goals>
						<configuration>
							<alias>cxfca</alias>
							<trustcacerts>true</trustcacerts>
							<noprompt>true</noprompt>
							<keystore>${project.build.outputDirectory}/truststore-server.jks</keystore>
							<file>${project.build.outputDirectory}/cxfca.pem</file>
						</configuration>
					</execution>
					<execution>
						<id>import-cxfca-certificate-to-alice</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>importCertificate</goal>
						</goals>
						<configuration>
							<alias>cxfca</alias>
							<trustcacerts>true</trustcacerts>
							<noprompt>true</noprompt>
							<keystore>${project.build.outputDirectory}/alice.jks</keystore>
							<file>${project.build.outputDirectory}/cxfca.pem</file>
						</configuration>
					</execution>
					<execution>
						<id>import-cxfca-certificate-to-bob</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>importCertificate</goal>
						</goals>
						<configuration>
							<alias>cxfca</alias>
							<trustcacerts>true</trustcacerts>
							<noprompt>true</noprompt>
							<keystore>${project.build.outputDirectory}/bob.jks</keystore>
							<file>${project.build.outputDirectory}/cxfca.pem</file>
						</configuration>
					</execution>
					<execution>
						<id>import-server-certificate</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>importCertificate</goal>
						</goals>
						<configuration>
							<alias>localhost</alias>
							<trustcacerts>true</trustcacerts>
							<noprompt>true</noprompt>
							<keystore>${project.build.outputDirectory}/truststore-server.jks</keystore>
							<file>${project.build.outputDirectory}/server.pem</file>
						</configuration>
					</execution>
					<execution>
						<id>import-alice-certificate</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>importCertificate</goal>
						</goals>
						<configuration>
							<alias>alice</alias>
							<trustcacerts>true</trustcacerts>
							<noprompt>true</noprompt>
							<keystore>${project.build.outputDirectory}/alice.jks</keystore>
							<file>${project.build.outputDirectory}/alice.pem</file>
						</configuration>
					</execution>
					<execution>
						<id>import-bob-certificate</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>importCertificate</goal>
						</goals>
						<configuration>
							<alias>bob</alias>
							<trustcacerts>true</trustcacerts>
							<noprompt>true</noprompt>
							<keystore>${project.build.outputDirectory}/bob.jks</keystore>
							<file>${project.build.outputDirectory}/bob.pem</file>
						</configuration>
					</execution>
					<execution>
						<id>import-bob-certificate-to-alice</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>importCertificate</goal>
						</goals>
						<configuration>
							<alias>bob</alias>
							<trustcacerts>true</trustcacerts>
							<noprompt>true</noprompt>
							<keystore>${project.build.outputDirectory}/alice.jks</keystore>
							<file>${project.build.outputDirectory}/bob.pem</file>
						</configuration>
					</execution>
					<execution>
						<id>import-alice-certificate-to-bob</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>importCertificate</goal>
						</goals>
						<configuration>
							<alias>alice</alias>
							<trustcacerts>true</trustcacerts>
							<noprompt>true</noprompt>
							<keystore>${project.build.outputDirectory}/bob.jks</keystore>
							<file>${project.build.outputDirectory}/alice.pem</file>
						</configuration>
					</execution>
					<execution>
						<id>create-client-trusstore</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>clean</goal>
							<goal>importCertificate</goal>
						</goals>
						<configuration>
							<alias>localhost</alias>
							<trustcacerts>true</trustcacerts>
							<noprompt>true</noprompt>
							<keystore>${project.build.outputDirectory}/truststore-client.jks</keystore>
							<file>${project.build.outputDirectory}/server.pem</file>
						</configuration>
					</execution>
					<execution>
						<id>import-cxfca-certificate-to-client</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>importCertificate</goal>
						</goals>
						<configuration>
							<alias>cxfca</alias>
							<trustcacerts>true</trustcacerts>
							<noprompt>true</noprompt>
							<keystore>${project.build.outputDirectory}/truststore-client.jks</keystore>
							<file>${project.build.outputDirectory}/cxfca.pem</file>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>native</id>
			<activation>
				<property>
					<name>native</name>
				</property>
			</activation>
			<properties>
				<skipITs>false</skipITs>
				<quarkus.package.type>native</quarkus.package.type>
			</properties>
		</profile>
	</profiles>
</project>